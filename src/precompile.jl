precompile(Tuple{typeof(Base.push!), Array{Function, 1}, Function})
precompile(Tuple{typeof(Base.allocatedinline), Type{Array{Function, 1}}})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(ImageCore.include), String})
precompile(Tuple{typeof(Base.Sys.which), String})
precompile(Tuple{typeof(Base.read), Base.Cmd, Type{String}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UndefVarError, Array{Base.StackTraces.StackFrame, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UndefVarError, Array{Base.StackTraces.StackFrame, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.:(-)), Int64, Bool})
precompile(Tuple{typeof(Base.hvcat), Tuple{Int64, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.promote_eltypeof), String, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.typed_hvcat), Type{String}, Tuple{Int64, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.typed_hcat), Type{T} where T, String, String})
precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{}, Tuple{Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base.cat_similar), String, Type{T} where T, Tuple{Int64, Int64}})
precompile(Tuple{Type{Array{String, N} where N}, UndefInitializer, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.argtail), String, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.tail), Tuple{String, String, String}})
precompile(Tuple{typeof(Base.typed_vcat), Type{String}, Array{String, 2}, Array{String, 2}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Array{String, 2}, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{String, 2}, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{String, 2}, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Array{String, 2}, Function, Int64})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Array{String, 1}, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{String, 1}, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{String, 1}, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{String, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(DirectImages.mjd), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.first), Core.SimpleVector})
precompile(Tuple{typeof(Dates.genvar), DataType})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Expr, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.mjd), Tuple{Array{String, 1}}}})
precompile(Tuple{Type{AstroTime.AstroDates.Date{C} where C}, Int64, Int64, Int64})
precompile(Tuple{typeof(AstroTime.AstroDates.last_j2000_dayofyear), AstroTime.AstroDates.GregorianCalendar, Int64})
precompile(Tuple{typeof(AstroTime.AstroDates.isleap), AstroTime.AstroDates.GregorianCalendar, Int64})
precompile(Tuple{Type{AstroTime.AstroDates.Date{AstroTime.AstroDates.GregorianCalendar()}}, Int64, Int64, Int64})
precompile(Tuple{Type{AstroTime.Epochs.Epoch{AstroTime.TimeScales.CoordinatedUniversalTime, T} where T}, AstroTime.AstroDates.Date{AstroTime.AstroDates.GregorianCalendar()}, AstroTime.AstroDates.Time{Float64}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Array{Float64, 1}, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Bool}, Int64, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(DirectImages.readfits), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Array{String, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(ImageFiltering.centered), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Array{String, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(ImageFiltering.centered), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Array{String, 1}}}}}})
precompile(Tuple{Type{FITSIO.FITS}, String, String})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ErrorException, Array{Base.StackTraces.StackFrame, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ErrorException, Array{Base.StackTraces.StackFrame, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.shell_parse), String})
precompile(Tuple{typeof(Base.Filesystem.cd)})
precompile(Tuple{typeof(Base.:(==)), Int64, Function})
precompile(Tuple{typeof(Base.map), Function, Int64})
precompile(Tuple{Type{Array{Float32, N} where N}, UndefInitializer, Int64, Int64})
precompile(Tuple{typeof(FITSIO.read_header), FITSIO.ImageHDU})
precompile(Tuple{Type{DirectImages.DirectImage{T, N, A} where A<:(AbstractArray{T, N} where N where T) where N where T}, Array{Float32, 2}})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Bool, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, String, Symbol, typeof(Base.:(/))})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractFloat, Integer, String}}, Bool})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Int64, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractFloat, Integer, String}}, Int64})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Nothing, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, String, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractFloat, Integer, String}}, String})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Float64, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractFloat, Integer, String}}, Float64})
precompile(Tuple{typeof(Base.all), Function, Core.SimpleVector})
precompile(Tuple{typeof(Base.:(*)), Int64})
precompile(Tuple{typeof(Base.minimum), Tuple{Int64}})
precompile(Tuple{typeof(ImageFiltering.centered), DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}})
precompile(Tuple{Type{Base.IteratorsMD.CartesianIndex{N} where N}, Int64, Vararg{Int64, N} where N})
precompile(Tuple{Type{Base.IteratorsMD.CartesianIndex{N} where N}, Tuple{Int64, Int64}})
precompile(Tuple{Type{DirectImages.DirectImage{T, N, A} where A<:(AbstractArray{T, N} where N where T) where N where T}, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, OrderedCollections.OrderedDict{Symbol, DirectImages.CommentedValue}, Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{Type{OffsetArrays.OffsetArray{T, N, AA} where AA<:AbstractArray{T, N} where N where T}, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{Type{OffsetArrays.OffsetArray{T, N, AA} where AA<:AbstractArray{T, N} where N where T}, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(ImageFiltering.centered), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Type{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}}})
precompile(Tuple{typeof(Base.setindex!), Array{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, 1}, DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(ImageFiltering.centered), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{Type{Array{Float64, N} where N}, UndefInitializer, Int64, Int64})
precompile(Tuple{Type{DirectImages.DirectImage{T, N, A} where A<:(AbstractArray{T, N} where N where T) where N where T}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Bool, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, String, Symbol, typeof(Base.:(/))})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Nothing, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Float64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, String, Symbol})
precompile(Tuple{typeof(ImageFiltering.centered), DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}})
precompile(Tuple{Type{DirectImages.DirectImage{T, N, A} where A<:(AbstractArray{T, N} where N where T) where N where T}, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, OrderedCollections.OrderedDict{Symbol, DirectImages.CommentedValue}, Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{Type{OffsetArrays.OffsetArray{T, N, AA} where AA<:AbstractArray{T, N} where N where T}, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{Type{OffsetArrays.OffsetArray{T, N, AA} where AA<:AbstractArray{T, N} where N where T}, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{Type{Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Array{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(ImageFiltering.centered), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(DirectImages.readfits), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.string), Int64})
precompile(Tuple{typeof(Base.string), Nothing})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Bool}, Int64, Int64})
precompile(Tuple{Type{Base.Pair{Symbol, DataType}}, Any, Any})
precompile(Tuple{typeof(Base.iterate), Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}})
precompile(Tuple{typeof(Base.getindex), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.filter), typeof(Base.isfinite), DirectImages.DirectImage{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}})
precompile(Tuple{typeof(Base.maximum), DirectImages.DirectImage{Float32, 1, DirectImages.DirectImage{Float32, 1, Array{Float32, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Float32})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Float32}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(/)), Tuple{DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Float32}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, OffsetArrays.OffsetArray{Float32, 2, Array{Float32, 2}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.identity), Tuple{OffsetArrays.OffsetArray{Float32, 2, Array{Float32, 2}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize!), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.identity), Tuple{OffsetArrays.OffsetArray{Float32, 2, Array{Float32, 2}}}}})
precompile(Tuple{typeof(Base.setproperty!), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Symbol, String})
precompile(Tuple{typeof(Base.iterate), Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.filter), typeof(Base.isfinite), DirectImages.DirectImage{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.maximum), DirectImages.DirectImage{Float64, 1, DirectImages.DirectImage{Float64, 1, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Float64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Float64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(/)), Tuple{DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Float64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, OffsetArrays.OffsetArray{Float64, 2, Array{Float64, 2}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.identity), Tuple{OffsetArrays.OffsetArray{Float64, 2, Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize!), DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.identity), Tuple{OffsetArrays.OffsetArray{Float64, 2, Array{Float64, 2}}}}})
precompile(Tuple{typeof(Base.setproperty!), DirectImages.DirectImage{Float64, 2, OffsetArrays.OffsetArray{Float64, 2, DirectImages.DirectImage{Float64, 2, Array{Float64, 2}}}}, Symbol, String})
precompile(Tuple{typeof(Base.getindex), Array{DirectImages.DirectImage{T, 2, A} where A<:(AbstractArray{T, N} where N where T) where T, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Symbol})
precompile(Tuple{typeof(Base.getindex), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, Symbol, typeof(Base.:(/))})
precompile(Tuple{typeof(Base.setindex!), DirectImages.DirectImage{Float32, 2, OffsetArrays.OffsetArray{Float32, 2, DirectImages.DirectImage{Float32, 2, Array{Float32, 2}}}}, String, Symbol, typeof(Base.:(/))})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Nothing, Int64}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64, Int64})